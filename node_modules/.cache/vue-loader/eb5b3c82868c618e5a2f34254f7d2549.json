{"remainingRequest":"/Users/monkey/Downloads/vue-cli3 demo/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/monkey/Downloads/vue-cli3 demo/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/monkey/Downloads/vue-cli3 demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/monkey/Downloads/vue-cli3 demo/src/components/CanvasEdit/Index1.vue?vue&type=template&id=9af01228&scoped=true","dependencies":[{"path":"/Users/monkey/Downloads/vue-cli3 demo/src/components/CanvasEdit/Index1.vue","mtime":1700451179448},{"path":"/Users/monkey/Downloads/vue-cli3 demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/monkey/Downloads/vue-cli3 demo/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/monkey/Downloads/vue-cli3 demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/monkey/Downloads/vue-cli3 demo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}